schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

input AuthProviderCredentialsInput {
  email: String!
  password: String!
}

"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  authProvider: AuthProviderCredentialsInput

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  informations: UserInput!
}

"""Autogenerated return type of CreateUser."""
type CreateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  status: Int!
}

"""Autogenerated input type of CreateVideo"""
input CreateVideoInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  file: Upload!
  informations: VideoInput!
}

"""Autogenerated return type of CreateVideo."""
type CreateVideoPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  status: Int!
}

"""Autogenerated input type of DeleteUser"""
input DeleteUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteUser."""
type DeleteUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  status: Int!
}

"""Autogenerated input type of DeleteVideo"""
input DeleteVideoInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  videoId: ID!
}

"""Autogenerated return type of DeleteVideo."""
type DeleteVideoPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  status: Int!
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

"""Represents untyped JSON"""
scalar JSON

type Mutation {
  createUser(
    """Parameters for CreateUser"""
    input: CreateUserInput!
  ): CreateUserPayload @join__field(graph: USERS)
  createVideo(
    """Parameters for CreateVideo"""
    input: CreateVideoInput!
  ): CreateVideoPayload @join__field(graph: STORAGES)
  deleteUser(
    """Parameters for DeleteUser"""
    input: DeleteUserInput!
  ): DeleteUserPayload @join__field(graph: USERS)
  deleteVideo(
    """Parameters for DeleteVideo"""
    input: DeleteVideoInput!
  ): DeleteVideoPayload @join__field(graph: STORAGES)
  signInUser(
    """Parameters for SignInUser"""
    input: SignInUserInput!
  ): SignInUserPayload @join__field(graph: USERS)
  updateUser(
    """Parameters for UpdateUser"""
    input: UpdateUserInput!
  ): UpdateUserPayload @join__field(graph: USERS)
  updateVideo(
    """Parameters for UpdateVideo"""
    input: UpdateVideoInput!
  ): UpdateVideoPayload @join__field(graph: STORAGES)
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Query {
  """Lists users"""
  users(name: String, surname: String, technologies: [String!]): [User!]! @join__field(graph: USERS)

  """Lists videos"""
  videos(createdAt: Boolean, name: String, videoType: String): [Video!]! @join__field(graph: STORAGES)
}

"""Autogenerated input type of SignInUser"""
input SignInUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  credentials: AuthProviderCredentialsInput
}

"""Autogenerated return type of SignInUser."""
type SignInUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  token: String
  user: User
}

"""Autogenerated input type of UpdateUser"""
input UpdateUserInput {
  attributes: UserInput!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateUser."""
type UpdateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

"""Autogenerated input type of UpdateVideo"""
input UpdateVideoInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  informations: VideoInput!
  videoId: ID!
}

"""Autogenerated return type of UpdateVideo."""
type UpdateVideoPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  status: Int!
  video: Video
}

scalar Upload

type User
  @join__owner(graph: USERS)
  @join__type(graph: USERS, key: "id")
  @join__type(graph: STORAGES, key: "id")
{
  birthday: String @join__field(graph: USERS)
  description: String @join__field(graph: USERS)
  email: String @join__field(graph: USERS)
  id: ID! @join__field(graph: USERS)
  name: String @join__field(graph: USERS)
  phone: Int @join__field(graph: USERS)
  surname: String @join__field(graph: USERS)
  technologies: JSON @join__field(graph: USERS)
  videos(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): VideoConnection @join__field(graph: STORAGES)
}

input UserInput {
  birthday: String
  description: String
  email: String
  name: String
  phone: Int
  surname: String
  technologies: [JSON!]
}

type Video {
  createdAt: ISO8601DateTime!
  description: String
  id: ID
  name: String
  rules: JSON
  user: User
  videoType: String
}

"""The connection type for Video."""
type VideoConnection {
  """A list of edges."""
  edges: [VideoEdge]

  """A list of nodes."""
  nodes: [Video]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type VideoEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Video
}

input VideoInput {
  author: ID!
  description: String!
  name: String!
  rules: [JSON!]
  videoType: String!
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  STORAGES @join__graph(name: "storages" url: "http://localhost:3000/graphql")
  USERS @join__graph(name: "users" url: "http://localhost:3001/graphql")
}